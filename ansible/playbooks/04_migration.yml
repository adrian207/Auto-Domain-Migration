---
# Playbook: 04_migration.yml
# Purpose: Execute ADMT migration in waves
# Usage: ansible-playbook -i inventory/hosts.ini playbooks/04_migration.yml -e "migration_wave=1"

- name: Pre-Migration Validation
  hosts: target_dc
  gather_facts: yes
  
  pre_tasks:
    - name: Verify required variables
      ansible.builtin.fail:
        msg: "Missing required variable: {{ item }}"
      when: vars[item] is not defined
      loop:
        - migration_wave
        - migration_batch_id
      ignore_errors: yes

    - name: Set default migration batch ID if not provided
      ansible.builtin.set_fact:
        migration_batch_id: "wave_{{ migration_wave | default(1) }}_{{ ansible_date_time.epoch }}"
      when: migration_batch_id is not defined

    - name: Display migration information
      ansible.builtin.debug:
        msg: |
          ========================================
          Starting ADMT Migration
          ========================================
          Wave: {{ migration_wave | default(1) }}
          Batch ID: {{ migration_batch_id }}
          Source Domain: {{ source_domain_fqdn }}
          Target Domain: {{ target_domain_fqdn }}
          ========================================

- name: Phase 1 - Migrate User Accounts
  hosts: target_dc
  gather_facts: no
  
  tasks:
    - name: Load user migration list for this wave
      ansible.builtin.set_fact:
        user_list: "{{ lookup('file', '/opt/ansible/data/waves/wave_' + (migration_wave | default(1) | string) + '_users.json') | from_json }}"
      ignore_errors: yes

    - name: Display users to migrate
      ansible.builtin.debug:
        msg: "Migrating {{ user_list | default([]) | length }} users"

    - name: Migrate users with ADMT
      ansible.builtin.include_role:
        name: admt_migration
      vars:
        migration_phase: "users"
      when: user_list is defined and user_list | length > 0
      tags:
        - migration
        - users

- name: Phase 2 - Migrate Groups
  hosts: target_dc
  gather_facts: no
  
  tasks:
    - name: Load group migration list for this wave
      ansible.builtin.set_fact:
        group_list: "{{ lookup('file', '/opt/ansible/data/waves/wave_' + (migration_wave | default(1) | string) + '_groups.json') | from_json }}"
      ignore_errors: yes

    - name: Display groups to migrate
      ansible.builtin.debug:
        msg: "Migrating {{ group_list | default([]) | length }} groups"

    - name: Migrate groups with ADMT
      ansible.builtin.include_role:
        name: admt_migration
      vars:
        migration_phase: "groups"
      when: group_list is defined and group_list | length > 0
      tags:
        - migration
        - groups

- name: Phase 3 - Migrate Computer Accounts
  hosts: target_dc
  gather_facts: no
  
  tasks:
    - name: Load computer migration list for this wave
      ansible.builtin.set_fact:
        computer_list: "{{ lookup('file', '/opt/ansible/data/waves/wave_' + (migration_wave | default(1) | string) + '_computers.json') | from_json }}"
      ignore_errors: yes

    - name: Display computers to migrate
      ansible.builtin.debug:
        msg: "Migrating {{ computer_list | default([]) | length }} computers"

    - name: Migrate computers with ADMT
      ansible.builtin.include_role:
        name: admt_migration
      vars:
        migration_phase: "computers"
      when: computer_list is defined and computer_list | length > 0
      tags:
        - migration
        - computers

- name: Post-Migration Summary
  hosts: localhost
  gather_facts: no
  
  tasks:
    - name: Display migration completion
      ansible.builtin.debug:
        msg: |
          ========================================
          Migration Wave {{ migration_wave | default(1) }} Complete!
          ========================================
          Batch ID: {{ migration_batch_id }}
          
          Next steps:
          1. Run validation playbook
          2. Test migrated accounts
          3. Proceed with next wave or complete migration
          ========================================

