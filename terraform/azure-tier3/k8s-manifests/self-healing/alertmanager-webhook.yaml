---
# Alertmanager Webhook Receiver for Self-Healing
# Receives alerts from Prometheus Alertmanager and triggers AWX job templates

apiVersion: v1
kind: ConfigMap
metadata:
  name: webhook-receiver-config
  namespace: monitoring
data:
  config.yml: |
    webhooks:
      - name: domain-controller-unhealthy
        url: "http://awx-service.awx.svc.cluster.local/api/v2/job_templates/1/launch/"
        method: POST
        headers:
          Authorization: "Bearer {{ awx_token }}"
          Content-Type: "application/json"
        body: |
          {
            "extra_vars": {
              "target_dc": "{{ $labels.instance }}",
              "service_name": "{{ $labels.service }}",
              "alert_name": "{{ $labels.alertname }}",
              "severity": "{{ $labels.severity }}"
            }
          }
        
      - name: disk-space-low
        url: "http://awx-service.awx.svc.cluster.local/api/v2/job_templates/2/launch/"
        method: POST
        headers:
          Authorization: "Bearer {{ awx_token }}"
        body: |
          {
            "extra_vars": {
              "target_hosts": "{{ $labels.instance }}",
              "cleanup_threshold_gb": 10,
              "alert_name": "{{ $labels.alertname }}"
            }
          }
      
      - name: migration-job-failed
        url: "http://awx-service.awx.svc.cluster.local/api/v2/job_templates/3/launch/"
        method: POST
        headers:
          Authorization: "Bearer {{ awx_token }}"
        body: |
          {
            "extra_vars": {
              "batch_id": "{{ $labels.batch_id }}",
              "retry_count": "{{ $labels.retry | default 1 }}",
              "alert_name": "{{ $labels.alertname }}"
            }
          }
      
      - name: dns-service-down
        url: "http://awx-service.awx.svc.cluster.local/api/v2/job_templates/4/launch/"
        method: POST
        headers:
          Authorization: "Bearer {{ awx_token }}"
        body: |
          {
            "extra_vars": {
              "dns_servers": "{{ $labels.instance }}",
              "alert_name": "{{ $labels.alertname }}"
            }
          }

---
apiVersion: v1
kind: Service
metadata:
  name: webhook-receiver
  namespace: monitoring
spec:
  selector:
    app: webhook-receiver
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-receiver
  namespace: monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webhook-receiver
  template:
    metadata:
      labels:
        app: webhook-receiver
    spec:
      containers:
        - name: webhook-receiver
          image: alertmanager/webhook-receiver:latest
          ports:
            - containerPort: 8080
          env:
            - name: AWX_TOKEN
              valueFrom:
                secretKeyRef:
                  name: awx-api-token
                  key: token
            - name: CONFIG_FILE
              value: /config/config.yml
          volumeMounts:
            - name: config
              mountPath: /config
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: webhook-receiver-config

---
apiVersion: v1
kind: Secret
metadata:
  name: awx-api-token
  namespace: monitoring
type: Opaque
stringData:
  token: "REPLACE_WITH_ACTUAL_AWX_TOKEN"

---
# Alertmanager Configuration - Add to existing alertmanager.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-webhook-routes
  namespace: monitoring
data:
  webhook-routes.yml: |
    # Add these routes to your alertmanager configuration
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 12h
      receiver: 'default'
      routes:
        # Self-healing routes
        - match:
            alertname: DomainControllerDown
          receiver: selfheal-dc-restart
          continue: true
          
        - match:
            alertname: DiskSpaceLow
          receiver: selfheal-disk-cleanup
          continue: true
          
        - match:
            alertname: MigrationJobFailed
          receiver: selfheal-migration-retry
          continue: true
          
        - match:
            alertname: DNSServiceDown
          receiver: selfheal-dns-reset
          continue: true
        
        - match:
            severity: critical
          receiver: pagerduty
          continue: true
    
    receivers:
      - name: 'default'
        email_configs:
          - to: 'admin@example.com'
      
      - name: 'selfheal-dc-restart'
        webhook_configs:
          - url: 'http://webhook-receiver.monitoring.svc.cluster.local/webhooks/domain-controller-unhealthy'
            send_resolved: true
      
      - name: 'selfheal-disk-cleanup'
        webhook_configs:
          - url: 'http://webhook-receiver.monitoring.svc.cluster.local/webhooks/disk-space-low'
            send_resolved: true
      
      - name: 'selfheal-migration-retry'
        webhook_configs:
          - url: 'http://webhook-receiver.monitoring.svc.cluster.local/webhooks/migration-job-failed'
            send_resolved: false
      
      - name: 'selfheal-dns-reset'
        webhook_configs:
          - url: 'http://webhook-receiver.monitoring.svc.cluster.local/webhooks/dns-service-down'
            send_resolved: true
      
      - name: 'pagerduty'
        pagerduty_configs:
          - service_key: 'YOUR_PAGERDUTY_KEY'

