# Loki Distributed Logging Configuration
# High-availability distributed logging stack

loki:
  image:
    repository: grafana/loki
    tag: 2.9.3
    pullPolicy: IfNotPresent
  
  auth_enabled: false
  
  ## Loki configuration
  config: |
    auth_enabled: false
    
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
      log_level: info
    
    common:
      path_prefix: /var/loki
      storage:
        filesystem:
          chunks_directory: /var/loki/chunks
          rules_directory: /var/loki/rules
      replication_factor: 3
    
    distributor:
      ring:
        kvstore:
          store: memberlist
    
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 3
        final_sleep: 0s
      chunk_idle_period: 1h
      max_chunk_age: 1h
      chunk_block_size: 262144
      chunk_retain_period: 30s
      max_transfer_retries: 0
      wal:
        enabled: true
        dir: /var/loki/wal
    
    memberlist:
      join_members:
        - loki-memberlist
    
    schema_config:
      configs:
        - from: 2023-01-01
          store: boltdb-shipper
          object_store: azure
          schema: v11
          index:
            prefix: index_
            period: 24h
    
    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/index_cache
        shared_store: azure
      
      azure:
        container_name: loki-chunks  # TODO: Create Azure Storage container
        account_name: YOUR_STORAGE_ACCOUNT  # TODO: Update
        account_key: YOUR_STORAGE_KEY  # TODO: Use Vault
        use_managed_identity: false
    
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_rate_mb: 10
      ingestion_burst_size_mb: 20
      max_query_parallelism: 32
      max_cache_freshness_per_query: 10m
    
    chunk_store_config:
      max_look_back_period: 0s
    
    table_manager:
      retention_deletes_enabled: true
      retention_period: 720h  # 30 days
    
    query_range:
      align_queries_with_step: true
      max_retries: 5
      cache_results: true
      results_cache:
        cache:
          enable_fifocache: true
          fifocache:
            max_size_bytes: 500MB
            validity: 24h
    
    frontend:
      log_queries_longer_than: 5s
      compress_responses: true
    
    compactor:
      working_directory: /var/loki/compactor
      shared_store: azure
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150
    
    ruler:
      storage:
        type: local
        local:
          directory: /var/loki/rules
      rule_path: /tmp/rules
      alertmanager_url: http://kube-prometheus-alertmanager:9093
      ring:
        kvstore:
          store: memberlist
      enable_api: true

## Gateway (NGINX)
gateway:
  enabled: true
  replicas: 2
  
  image:
    repository: nginxinc/nginx-unprivileged
    tag: 1.25-alpine
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  
  ingress:
    enabled: true
    ingressClassName: azure-application-gateway
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      appgw.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: loki.yourdomain.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: loki-tls
        hosts:
          - loki.yourdomain.com

## Distributor
distributor:
  replicas: 3
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi
  
  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: distributor
          topologyKey: kubernetes.io/hostname

## Ingester
ingester:
  replicas: 3
  
  persistence:
    enabled: true
    storageClass: managed-premium
    size: 50Gi
  
  resources:
    requests:
      cpu: 1000m
      memory: 4Gi
    limits:
      cpu: 2000m
      memory: 8Gi
  
  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: ingester
          topologyKey: kubernetes.io/hostname

## Querier
querier:
  replicas: 3
  
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 4Gi
  
  persistence:
    enabled: true
    storageClass: managed-premium
    size: 10Gi

## Query Frontend
queryFrontend:
  replicas: 2
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

## Compactor
compactor:
  enabled: true
  
  persistence:
    enabled: true
    storageClass: managed-premium
    size: 20Gi
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

## Index Gateway
indexGateway:
  enabled: true
  replicas: 2
  
  persistence:
    enabled: true
    storageClass: managed-premium
    size: 20Gi
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

## Ruler
ruler:
  enabled: true
  replicas: 2
  
  persistence:
    enabled: true
    storageClass: managed-premium
    size: 10Gi
  
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

## Promtail (log shipper)
promtail:
  enabled: true
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  
  config:
    clients:
      - url: http://loki-gateway/loki/api/v1/push
        tenant_id: 1
    
    positions:
      filename: /run/promtail/positions.yaml
    
    scrape_configs:
      # Kubernetes pods
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: replace
            target_label: app
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: replace
            target_label: container
        pipeline_stages:
          - cri: {}
          - json:
              expressions:
                level: level
                msg: message
                timestamp: time
          - labels:
              level:
              msg:
          - timestamp:
              source: timestamp
              format: RFC3339

## Service Monitor
serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  labels:
    prometheus: kube-prometheus

## Network Policy
networkPolicy:
  enabled: true
  metrics:
    podSelector:
      matchLabels:
        app.kubernetes.io/name: prometheus
    namespaceSelector:
      matchLabels:
        name: monitoring

