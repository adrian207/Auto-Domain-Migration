# PostgreSQL HA with Patroni
# 3-node cluster with automatic failover

global:
  postgresql:
    auth:
      postgresPassword: "ChangeThisPassword123!"  # TODO: Use Vault
      username: "awx"
      password: "ChangeThisPassword123!"  # TODO: Use Vault
      database: "awx"
      replicationUsername: "replicator"
      replicationPassword: "ChangeThisPassword123!"  # TODO: Use Vault

postgresql:
  image:
    registry: docker.io
    repository: bitnami/postgresql-repmgr
    tag: 15.5.0-debian-11-r6
  
  replicaCount: 3  # 3-node cluster for HA
  
  podAntiAffinityPreset: hard  # Spread across nodes
  
  resources:
    requests:
      memory: 6Gi
      cpu: 2000m
    limits:
      memory: 8Gi
      cpu: 4000m
  
  # PostgreSQL configuration
  postgresqlSharedPreloadLibraries: "pgaudit,pg_stat_statements"
  
  extraEnvVars:
    - name: POSTGRESQL_MAX_CONNECTIONS
      value: "300"
    - name: POSTGRESQL_SHARED_BUFFERS
      value: "2GB"
    - name: POSTGRESQL_EFFECTIVE_CACHE_SIZE
      value: "6GB"
    - name: POSTGRESQL_MAINTENANCE_WORK_MEM
      value: "512MB"
    - name: POSTGRESQL_CHECKPOINT_COMPLETION_TARGET
      value: "0.9"
    - name: POSTGRESQL_WAL_BUFFERS
      value: "16MB"
    - name: POSTGRESQL_DEFAULT_STATISTICS_TARGET
      value: "100"
    - name: POSTGRESQL_RANDOM_PAGE_COST
      value: "1.1"  # SSD
    - name: POSTGRESQL_EFFECTIVE_IO_CONCURRENCY
      value: "200"
    - name: POSTGRESQL_WORK_MEM
      value: "10MB"
    - name: POSTGRESQL_MIN_WAL_SIZE
      value: "1GB"
    - name: POSTGRESQL_MAX_WAL_SIZE
      value: "4GB"
  
  # Persistence
  persistence:
    enabled: true
    storageClass: managed-premium
    size: 100Gi
    accessModes:
      - ReadWriteOnce
  
  # Backup configuration
  backup:
    enabled: true
    cronjob:
      schedule: "0 2 * * *"  # 2 AM daily
      concurrencyPolicy: Forbid
      successfulJobsHistoryLimit: 7
      failedJobsHistoryLimit: 7
    
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
      limits:
        memory: 2Gi
        cpu: 1000m

pgpool:
  image:
    registry: docker.io
    repository: bitnami/pgpool
    tag: 4.5.0-debian-11-r4
  
  replicaCount: 2  # 2 pgpool instances for HA
  
  podAntiAffinityPreset: soft
  
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  
  # PgPool configuration
  adminUsername: "admin"
  adminPassword: "ChangeThisPassword123!"  # TODO: Use Vault
  
  numInitChildren: 32
  maxPool: 4
  childMaxConnections: 10
  childLifeTime: 300
  connectionLifeTime: 0
  clientIdleLimit: 0
  
  # Load balancing
  loadBalancing:
    enabled: true
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      postgresql: 5432
  
  # Healthchecks
  healthcheck:
    enabled: true
    interval: 30
    timeout: 10
    retryCount: 3
    
  # Connection pooling
  connectionPooling:
    enabled: true
    maxConnections: 300
    reservedConnections: 10

# PostgreSQL metrics exporter
metrics:
  enabled: true
  
  image:
    registry: docker.io
    repository: bitnami/postgres-exporter
    tag: 0.15.0-debian-11-r3
  
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 200m
  
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels:
      prometheus: kube-prometheus

# Service Account
serviceAccount:
  create: true
  name: postgresql-ha

# Volume permissions (for Azure Disk)
volumePermissions:
  enabled: true

# Network policies
networkPolicy:
  enabled: true
  allowExternal: false
  explicitNamespacesSelector:
    matchLabels:
      name: automation  # Allow AWX namespace
  
# Additional custom configuration
postgresql:
  configuration: |
    # Connection settings
    listen_addresses = '*'
    max_connections = 300
    superuser_reserved_connections = 3
    
    # Memory settings
    shared_buffers = 2GB
    huge_pages = try
    temp_buffers = 32MB
    work_mem = 10MB
    maintenance_work_mem = 512MB
    
    # WAL settings
    wal_level = replica
    wal_log_hints = on
    max_wal_size = 4GB
    min_wal_size = 1GB
    wal_compression = on
    
    # Checkpoints
    checkpoint_timeout = 15min
    checkpoint_completion_target = 0.9
    
    # Archiving
    archive_mode = on
    archive_command = 'test ! -f /archive/%f && cp %p /archive/%f'
    
    # Replication
    max_wal_senders = 10
    max_replication_slots = 10
    hot_standby = on
    hot_standby_feedback = on
    
    # Query tuning
    random_page_cost = 1.1
    effective_cache_size = 6GB
    default_statistics_target = 100
    
    # Logging
    logging_collector = on
    log_destination = 'csvlog'
    log_directory = 'log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_rotation_age = 1d
    log_rotation_size = 100MB
    log_line_prefix = '%m [%p] %q%u@%d '
    log_timezone = 'UTC'
    log_statement = 'ddl'
    log_min_duration_statement = 1000
    
    # Autovacuum
    autovacuum = on
    autovacuum_max_workers = 3
    autovacuum_naptime = 1min
    
    # Lock management
    deadlock_timeout = 1s
    max_locks_per_transaction = 64

