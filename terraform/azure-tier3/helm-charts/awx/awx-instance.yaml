# AWX Instance Configuration
# Deploy this AFTER the operator is running

apiVersion: v1
kind: Secret
metadata:
  name: awx-admin-password
  namespace: automation
type: Opaque
stringData:
  password: "ChangeThisPassword123!"  # TODO: Generate strong password

---
apiVersion: v1
kind: Secret
metadata:
  name: awx-postgres-credentials
  namespace: automation
type: Opaque
stringData:
  host: "postgresql-postgresql-ha-pgpool.data.svc.cluster.local"
  port: "5432"
  database: "awx"
  username: "awx"
  password: "ChangeThisPassword123!"  # TODO: Use Vault or generate
  sslmode: "prefer"
  type: "managed"

---
apiVersion: awx.ansible.com/v1beta1
kind: AWX
metadata:
  name: awx
  namespace: automation
spec:
  # Service configuration
  service_type: ClusterIP
  ingress_type: ingress
  ingress_annotations: |
    kubernetes.io/ingress.class: azure/application-gateway
    cert-manager.io/cluster-issuer: letsencrypt-prod
  ingress_tls_secret: awx-tls
  hostname: awx.yourdomain.com  # TODO: Update with your domain
  
  # Admin credentials
  admin_user: admin
  admin_password_secret: awx-admin-password
  
  # PostgreSQL configuration (external)
  postgres_configuration_secret: awx-postgres-credentials
  
  # Storage configuration
  projects_persistence: true
  projects_storage_class: managed-premium
  projects_storage_size: 20Gi
  projects_storage_access_mode: ReadWriteOnce
  
  # Web and task containers
  web_replicas: 2  # High availability
  task_replicas: 2
  
  # Resource requests and limits
  web_resource_requirements:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 4Gi
  
  task_resource_requirements:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 4Gi
  
  ee_resource_requirements:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  
  # Redis for job queue
  redis_resource_requirements:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  
  # Execution environment
  ee_images:
    - name: Default Execution Environment
      image: quay.io/ansible/awx-ee:latest
    - name: ADMT Migration EE
      image: quay.io/yourusername/admt-ee:latest  # TODO: Build custom EE
  
  # Extra settings
  extra_settings:
    - setting: AWX_TASK_ENV
      value:
        ANSIBLE_HOST_KEY_CHECKING: "False"
        ANSIBLE_TIMEOUT: "300"
    - setting: SESSION_COOKIE_AGE
      value: "14400"  # 4 hours
    - setting: INSIGHTS_TRACKING_STATE
      value: "false"
  
  # Mount custom CA certificates
  bundle_cacert_secret: custom-ca-bundle

---
apiVersion: v1
kind: Service
metadata:
  name: awx-service
  namespace: automation
  labels:
    app: awx
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8052
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: awx
    app.kubernetes.io/part-of: awx

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: awx-ingress
  namespace: automation
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    cert-manager.io/cluster-issuer: letsencrypt-prod
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
spec:
  tls:
    - hosts:
        - awx.yourdomain.com
      secretName: awx-tls
  rules:
    - host: awx.yourdomain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: awx-service
                port:
                  number: 80

