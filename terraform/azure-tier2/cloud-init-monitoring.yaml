#cloud-config
# Monitoring Stack Setup (Prometheus + Grafana) - Production
# Author: Adrian Johnson <adrian207@gmail.com>

package_update: true
package_upgrade: true

packages:
  - docker.io
  - docker-compose
  - python3-pip
  - postgresql-client

write_files:
  - path: /opt/monitoring/docker-compose.yml
    content: |
      version: '3'
      services:
        prometheus:
          image: prom/prometheus:latest
          container_name: prometheus
          restart: unless-stopped
          ports:
            - "9090:9090"
          volumes:
            - prometheus-data:/prometheus
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
          command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time=90d'

        grafana:
          image: grafana/grafana:latest
          container_name: grafana
          restart: unless-stopped
          ports:
            - "3000:3000"
          environment:
            - GF_SERVER_ROOT_URL=http://localhost:3000
            - GF_SECURITY_ADMIN_PASSWORD=${admin_username}
            - GF_DATABASE_TYPE=postgres
            - GF_DATABASE_HOST=${postgres_host}
            - GF_DATABASE_NAME=grafana_db
            - GF_DATABASE_USER=${postgres_user}
            - GF_DATABASE_PASSWORD=${postgres_password}
          volumes:
            - grafana-data:/var/lib/grafana

      volumes:
        prometheus-data:
        grafana-data:

  - path: /opt/monitoring/prometheus.yml
    content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s

      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']

runcmd:
  - cd /opt/monitoring
  - docker-compose up -d

final_message: "Monitoring stack is ready! Grafana: http://[IP]:3000 Prometheus: http://[IP]:9090"


