#cloud-config
# Ansible Controller Setup (Rocky Linux 9)
# Author: Adrian Johnson <adrian207@gmail.com>

package_update: true
package_upgrade: true

packages:
  - epel-release
  - python3-pip
  - git
  - postgresql
  - jq
  - sshpass
  - vim
  - tmux
  - ansible-core

write_files:
  - path: /etc/profile.d/ansible.sh
    content: |
      export ANSIBLE_HOST_KEY_CHECKING=False
      export ANSIBLE_RETRY_FILES_ENABLED=False
      export ANSIBLE_STDOUT_CALLBACK=yaml
      export ANSIBLE_GATHERING=smart
      export ANSIBLE_PIPELINING=True

  - path: /opt/migration/requirements.txt
    content: |
      ansible>=2.15.0
      pywinrm>=0.4.3
      requests-credssp
      pypsrp
      psycopg2-binary
      azure-storage-blob
      pyyaml
      jinja2

  - path: /opt/migration/.env
    content: |
      POSTGRES_HOST=${postgres_host}
      POSTGRES_USER=${postgres_user}
      POSTGRES_PASSWORD=${postgres_password}
      AZURE_STORAGE_ACCOUNT=${storage_account}
      AZURE_STORAGE_KEY=${storage_key}

runcmd:
  # Update system and install EPEL
  - dnf update -y
  - dnf install -y epel-release
  - dnf config-manager --set-enabled crb
  
  # Install Ansible (available in EPEL for Rocky Linux)
  - dnf install -y ansible-core
  
  # Set up Python virtual environment
  - python3 -m venv /opt/migration/venv
  - /opt/migration/venv/bin/pip install --upgrade pip
  - /opt/migration/venv/bin/pip install -r /opt/migration/requirements.txt
  
  # Clone migration repository (will be available after git push)
  - mkdir -p /opt/migration/repo
  - chown -R ${admin_username}:${admin_username} /opt/migration
  
  # Initialize PostgreSQL state store schema (placeholder)
  - |
    PGPASSWORD="${postgres_password}" psql -h "${postgres_host}" -U "${postgres_user}" -d "migration_state" << EOF
    CREATE TABLE IF NOT EXISTS migration_batches (
        batch_id SERIAL PRIMARY KEY,
        batch_name VARCHAR(255) NOT NULL,
        wave_number INTEGER NOT NULL,
        status VARCHAR(50) DEFAULT 'pending',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        started_at TIMESTAMP,
        completed_at TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS migration_targets (
        target_id SERIAL PRIMARY KEY,
        batch_id INTEGER REFERENCES migration_batches(batch_id),
        hostname VARCHAR(255) NOT NULL,
        target_type VARCHAR(50) NOT NULL, -- 'user' or 'computer'
        status VARCHAR(50) DEFAULT 'pending',
        error_message TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS migration_events (
        event_id SERIAL PRIMARY KEY,
        target_id INTEGER REFERENCES migration_targets(target_id),
        event_type VARCHAR(100) NOT NULL,
        event_data JSONB,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    EOF
  
  # Set up Ansible configuration
  - |
    cat > /etc/ansible/ansible.cfg << EOF
    [defaults]
    host_key_checking = False
    retry_files_enabled = False
    stdout_callback = yaml
    gathering = smart
    pipelining = True
    forks = 10
    timeout = 30
    
    [privilege_escalation]
    become = True
    become_method = runas
    become_user = Administrator
    
    [winrm]
    transport = credssp
    EOF

final_message: "Ansible controller is ready on Rocky Linux 9! Clone migration repo to /opt/migration/repo"
