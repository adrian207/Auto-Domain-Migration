#cloud-config
# Apache Guacamole Bastion Host Setup (Rocky Linux 9 - Production)
# Author: Adrian Johnson <adrian207@gmail.com>

package_update: true
package_upgrade: true

packages:
  - nginx
  - postgresql
  - python3-pip
  - jq
  - fail2ban
  - firewalld

write_files:
  - path: /opt/guacamole/docker-compose.yml
    content: |
      version: '3'
      services:
        guacd:
          image: guacamole/guacd:latest
          container_name: guacd
          restart: unless-stopped
          networks:
            - guacamole_net

        guacamole:
          image: guacamole/guacamole:latest
          container_name: guacamole
          restart: unless-stopped
          environment:
            GUACD_HOSTNAME: guacd
            POSTGRES_HOSTNAME: ${postgres_host}
            POSTGRES_DATABASE: ${postgres_db}
            POSTGRES_USER: ${postgres_user}
            POSTGRES_PASSWORD: ${postgres_password}
          ports:
            - "8080:8080"
          networks:
            - guacamole_net
          depends_on:
            - guacd

      networks:
        guacamole_net:
          driver: bridge

  - path: /etc/nginx/conf.d/guacamole.conf
    content: |
      server {
          listen 80;
          listen [::]:80;
          server_name _;
          return 301 https://$$host$$request_uri;
      }

      server {
          listen 443 ssl http2;
          listen [::]:443 ssl http2;
          server_name _;

          ssl_certificate /etc/nginx/ssl/cert.pem;
          ssl_certificate_key /etc/nginx/ssl/key.pem;
          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_ciphers HIGH:!aNULL:!MD5;

          # Security headers
          add_header X-Frame-Options "SAMEORIGIN" always;
          add_header X-Content-Type-Options "nosniff" always;
          add_header X-XSS-Protection "1; mode=block" always;

          location / {
              proxy_pass http://localhost:8080/guacamole/;
              proxy_buffering off;
              proxy_http_version 1.1;
              proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
              proxy_set_header Upgrade $$http_upgrade;
              proxy_set_header Connection $$http_connection;
              proxy_cookie_path /guacamole/ /;
              access_log /var/log/nginx/guacamole-access.log;
              error_log /var/log/nginx/guacamole-error.log;
          }
      }

  - path: /usr/local/bin/update-nsg-ip.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      # Update Azure NSG with current public IP
      # Runs every 5 minutes via cron

      LOG_FILE="/var/log/nsg-update.log"
      RESOURCE_GROUP="${resource_group}"
      NSG_NAME="${nsg_name}"
      RULE_NAME="Allow-HTTPS-Inbound"

      echo "[$(date)] Starting NSG IP update" >> $$LOG_FILE

      # Get current public IP
      CURRENT_IP=$(curl -s https://api.ipify.org)
      if [ -z "$$CURRENT_IP" ]; then
          echo "[$(date)] ERROR: Could not determine public IP" >> $$LOG_FILE
          exit 1
      fi

      echo "[$(date)] Current IP: $$CURRENT_IP" >> $$LOG_FILE

      # Login using managed identity
      az login --identity >> $$LOG_FILE 2>&1

      # Get current NSG rule
      EXISTING_IP=$(az network nsg rule show \
          --resource-group $$RESOURCE_GROUP \
          --nsg-name $$NSG_NAME \
          --name $$RULE_NAME \
          --query 'sourceAddressPrefixes[0]' -o tsv 2>/dev/null)

      if [ "$$EXISTING_IP" != "$$CURRENT_IP/32" ]; then
          echo "[$(date)] Updating NSG rule from $$EXISTING_IP to $$CURRENT_IP/32" >> $$LOG_FILE
          
          az network nsg rule update \
              --resource-group $$RESOURCE_GROUP \
              --nsg-name $$NSG_NAME \
              --name $$RULE_NAME \
              --source-address-prefixes "$$CURRENT_IP/32" \
              >> $$LOG_FILE 2>&1
          
          if [ $$? -eq 0 ]; then
              echo "[$(date)] NSG rule updated successfully" >> $$LOG_FILE
          else
              echo "[$(date)] ERROR: Failed to update NSG rule" >> $$LOG_FILE
          fi
      else
          echo "[$(date)] IP unchanged, no update needed" >> $$LOG_FILE
      fi

  - path: /usr/local/bin/init-guacamole-db.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      # Initialize Guacamole database schema

      echo "Waiting for PostgreSQL to be ready..."
      until PGPASSWORD="${postgres_password}" psql -h "${postgres_host}" -U "${postgres_user}" -d "${postgres_db}" -c '\q' 2>/dev/null; do
          sleep 5
      done

      echo "PostgreSQL is ready. Initializing Guacamole schema..."
      
      docker run --rm guacamole/guacamole /opt/guacamole/bin/initdb.sh --postgres | \
          PGPASSWORD="${postgres_password}" psql -h "${postgres_host}" -U "${postgres_user}" -d "${postgres_db}"

      echo "Guacamole database initialized!"

runcmd:
  # Update system and install EPEL
  - dnf update -y
  - dnf install -y epel-release
  - dnf config-manager --set-enabled crb
  
  # Install Docker (using official Docker repository for Rocky Linux)
  - dnf install -y dnf-plugins-core
  - dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
  - dnf install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker
  
  # Configure firewalld
  - systemctl enable firewalld
  - systemctl start firewalld
  - firewall-cmd --permanent --add-service=ssh
  - firewall-cmd --permanent --add-service=http
  - firewall-cmd --permanent --add-service=https
  - firewall-cmd --reload
  
  # Configure fail2ban for additional security
  - systemctl enable fail2ban
  - systemctl start fail2ban
  
  # Generate self-signed SSL certificate (Production: use Let's Encrypt or proper cert)
  - mkdir -p /etc/nginx/ssl
  - openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout /etc/nginx/ssl/key.pem -out /etc/nginx/ssl/cert.pem -subj "/C=US/ST=State/L=City/O=Organization/CN=guacamole"
  
  # Configure SELinux for Nginx proxy
  - setsebool -P httpd_can_network_connect 1
  
  # Start Nginx
  - systemctl restart nginx
  - systemctl enable nginx
  
  # Install Azure CLI (Rocky Linux 9 compatible)
  - rpm --import https://packages.microsoft.com/keys/microsoft.asc
  - |
    cat > /etc/yum.repos.d/azure-cli.repo << EOF
    [azure-cli]
    name=Azure CLI
    baseurl=https://packages.microsoft.com/yumrepos/azure-cli
    enabled=1
    gpgcheck=1
    gpgkey=https://packages.microsoft.com/keys/microsoft.asc
    EOF
  - dnf install -y azure-cli
  
  # Initialize Guacamole database
  - sleep 30
  - /usr/local/bin/init-guacamole-db.sh
  
  # Start Guacamole containers using Docker Compose plugin
  - cd /opt/guacamole
  - docker compose up -d
  
  # Set up cron job for NSG IP updates (every 5 minutes)
  - echo "*/5 * * * * root /usr/local/bin/update-nsg-ip.sh" > /etc/cron.d/nsg-update
  - chmod 0644 /etc/cron.d/nsg-update
  
  # Run initial NSG update
  - sleep 60
  - /usr/local/bin/update-nsg-ip.sh

final_message: "Guacamole bastion host is ready on Rocky Linux 9 (Production)! Access at https://[PUBLIC_IP]/"
